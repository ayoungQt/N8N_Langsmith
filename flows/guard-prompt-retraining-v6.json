{
    "name": "Guard Prompt Retraining v6 - Complete",
    "nodes": [
        {
            "parameters": {},
            "name": "Daily Schedule Trigger",
            "type": "n8n-nodes-base.scheduleTrigger",
            "typeVersion": 1,
            "position": [
                -20,
                200
            ]
        },
        {
            "parameters": {
                "url": "https://api.smith.langchain.com/feedback",
                "authentication": "headerAuth",
                "sendQuery": true,
                "queryParameters": {
                    "parameters": [
                        {
                            "name": "key",
                            "value": "trip_validity"
                        },
                        {
                            "name": "value",
                            "value": "False Positive"
                        },
                        {
                            "name": "min_created_at",
                            "value": "{{ $now.minus({ days: 7 }).startOf('day').toUTC().toISO() }}"
                        }
                    ]
                },
                "options": {}
            },
            "name": "Get All False Positive Feedback",
            "type": "n8n-nodes-base.httpRequest",
            "typeVersion": 2,
            "position": [
                420,
                200
            ],
            "credentials": {
                "httpHeaderAuth": {
                    "id": "100",
                    "name": "LangSmith Header Auth"
                }
            }
        },
        {
            "parameters": {
                "values": {
                    "string": [
                        {
                            "name": "guards",
                            "value": "{\n  \"guards\": [\n    {\n      \"name\": \"tool supevisor\",\n      \"documentName\": \"tool_supevisor_node.txt\"\n    },\n    {\n      \"name\": \"human assistant guard agentic\",\n      \"documentName\": \"human_assistant_guard_agentic.txt\"\n    },\n    {\n      \"name\": \"unusual prompt agentic\",\n      \"documentName\": \"unusual_prompt_agentic_prompt.txt\"\n    },\n    {\n      \"name\": \"agentic knowledge base\",\n      \"documentName\": \"agentic_knowledge_base.txt\"\n    },\n    {\n      \"name\": \"qa bot\",\n      \"documentName\": \"qa_bot_node.txt\"\n    },\n    {\n      \"name\": \"financial advice guard agentic\",\n      \"documentName\": \"financial_guard_prompt.txt\"\n    },\n    {\n      \"name\": \"system instruction agentic\",\n      \"documentName\": \"system_instructions.txt\"\n    },\n    {\n      \"name\": \"conversational hallucination agentic\",\n      \"documentName\": \"hallucination_guard_prompt.txt\"\n    }\n  ]\n}"
                        }
                    ]
                },
                "options": {
                    "parse": true
                }
            },
            "name": "Guard Config List",
            "type": "n8n-nodes-base.set",
            "typeVersion": 1,
            "position": [
                200,
                200
            ]
        },
        {
            "parameters": {
                "batchSize": 1,
                "options": {}
            },
            "name": "Loop Through Feedback",
            "type": "n8n-nodes-base.splitInBatches",
            "typeVersion": 1,
            "position": [
                640,
                200
            ]
        },
        {
            "parameters": {
                "url": "=https://api.smith.langchain.com/runs/{{ $json.run_id }}",
                "authentication": "headerAuth",
                "options": {}
            },
            "name": "Get Run Details",
            "type": "n8n-nodes-base.httpRequest",
            "typeVersion": 2,
            "position": [
                860,
                200
            ],
            "credentials": {
                "httpHeaderAuth": {
                    "id": "100",
                    "name": "LangSmith Header Auth"
                }
            }
        },
        {
            "parameters": {
                "conditions": {
                    "string": [
                        {
                            "value1": "={{ $('Guard Config List').json.guards.map(g => g.name) }}",
                            "operation": "contains",
                            "value2": "={{$json.name}}"
                        }
                    ]
                }
            },
            "name": "Is Run Name A Guard?",
            "type": "n8n-nodes-base.if",
            "typeVersion": 1,
            "position": [
                1080,
                200
            ]
        },
        {
            "parameters": {
                "jsCode": "const runName = $json.name;\nconst guards = $('Guard Config List').json.guards;\nconst matchingGuard = guards.find(guard => guard.name === runName);\n\nif (matchingGuard) {\n  $json.documentName = matchingGuard.documentName;\n  return $json;\n} else {\n  return null;\n}"
            },
            "name": "Append DocumentName",
            "type": "n8n-nodes-base.code",
            "typeVersion": 1,
            "position": [
                1300,
                200
            ]
        },
        {
            "parameters": {
                "url": "https://www.googleapis.com/drive/v3/files",
                "authentication": "oAuth2",
                "sendQuery": true,
                "queryParameters": {
                    "parameters": [
                        {
                            "name": "q",
                            "value": "=name = '{{ $json.documentName }}' and mimeType != 'application/vnd.google-apps.folder' and trashed = false"
                        },
                        {
                            "name": "fields",
                            "value": "files(id, name)"
                        }
                    ]
                },
                "options": {}
            },
            "name": "Find GDoc File",
            "type": "n8n-nodes-base.httpRequest",
            "typeVersion": 2,
            "position": [
                1520,
                200
            ],
            "credentials": {
                "googleOAuth2Api": {
                    "id": "YOUR_GOOGLE_OAUTH_CREDENTIAL_ID",
                    "name": "Google OAuth2 Credential"
                }
            }
        },
        {
            "parameters": {
                "url": "=https://www.googleapis.com/drive/v3/files/{{ $('Find GDoc File').json.files[0].id }}?alt=media",
                "authentication": "oAuth2",
                "options": {}
            },
            "name": "Read GDoc Content",
            "type": "n8n-nodes-base.httpRequest",
            "typeVersion": 2,
            "position": [
                1740,
                200
            ],
            "credentials": {
                "googleOAuth2Api": {
                    "id": "YOUR_GOOGLE_OAUTH_CREDENTIAL_ID",
                    "name": "Google OAuth2 Credential"
                }
            }
        },
        {
            "parameters": {
                "model": "gemini-1.5-flash",
                "prompt": "Based on the original guard prompt below, and the user input that was incorrectly flagged as a false positive, please generate a new, improved guard prompt that would correctly handle this input in the future.\n\nOriginal Prompt:\n---\n{{ $('Read GDoc Content').rawBody }}\n---\n\nIncorrectly Flagged User Input:\n---\n{{ $('Get Run Details').json.inputs.input }}\n---"
            },
            "name": "Generate New Prompt",
            "type": "n8n-nodes-langchain.llm",
            "typeVersion": 1,
            "position": [
                1960,
                200
            ],
            "credentials": {
                "geminiApi": {
                    "id": "YOUR_GEMINI_API_CREDENTIAL_ID",
                    "name": "Gemini Credential"
                }
            }
        },
        {
            "parameters": {
                "method": "PATCH",
                "url": "=https://www.googleapis.com/upload/drive/v3/files/{{ $('Find GDoc File').json.files[0].id }}?uploadType=media",
                "authentication": "oAuth2",
                "sendBody": true,
                "body": "={{ $('Generate New Prompt').json.output }}",
                "options": {}
            },
            "name": "Update GDoc",
            "type": "n8n-nodes-base.httpRequest",
            "typeVersion": 2,
            "position": [
                2180,
                200
            ],
            "credentials": {
                "googleOAuth2Api": {
                    "id": "YOUR_GOOGLE_OAUTH_CREDENTIAL_ID",
                    "name": "Google OAuth2 Credential"
                }
            }
        }
    ],
    "connections": {
        "Daily Schedule Trigger": {
            "main": [
                [
                    {
                        "node": "Guard Config List",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Guard Config List": {
            "main": [
                [
                    {
                        "node": "Get All False Positive Feedback",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Get All False Positive Feedback": {
            "main": [
                [
                    {
                        "node": "Loop Through Feedback",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Loop Through Feedback": {
            "main": [
                [
                    {
                        "node": "Get Run Details",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Get Run Details": {
            "main": [
                [
                    {
                        "node": "Is Run Name A Guard?",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Is Run Name A Guard?": {
            "main": [
                [
                    {
                        "node": "Append DocumentName",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Append DocumentName": {
            "main": [
                [
                    {
                        "node": "Find GDoc File",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Find GDoc File": {
            "main": [
                [
                    {
                        "node": "Read GDoc Content",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Read GDoc Content": {
            "main": [
                [
                    {
                        "node": "Generate New Prompt",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Generate New Prompt": {
            "main": [
                [
                    {
                        "node": "Update GDoc",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        }
    }
} 